basePath: /
definitions:
  define.ProblemBasic:
    properties:
      content:
        description: 问题内容
        type: string
      identity:
        description: 问题表的唯一标识
        type: string
      max_mem:
        description: 最大运行内存
        type: integer
      max_runtime:
        description: 最大运行时长
        type: integer
      problem_categories:
        description: 关联问题分类表
        items:
          type: integer
        type: array
      test_cases:
        description: 关联测试用例表
        items:
          $ref: '#/definitions/define.TestCase'
        type: array
      title:
        description: 问题标题
        type: string
    type: object
  define.TestCase:
    properties:
      input:
        description: 输入
        type: string
      output:
        description: 输出
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
  version: "1.0"
paths:
  /admin/category-create:
    post:
      parameters:
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: parentId
        in: formData
        name: parentId
        type: integer
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 分类创建
      tags:
      - 管理员私有方法
  /admin/category-delete:
    delete:
      parameters:
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: identity
        in: query
        name: identity
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 分类删除
      tags:
      - 管理员私有方法
  /admin/category-modify:
    put:
      parameters:
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: identity
        in: formData
        name: identity
        required: true
        type: string
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: parentId
        in: formData
        name: parentId
        type: integer
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 分类修改
      tags:
      - 管理员私有方法
  /admin/problem-create:
    post:
      consumes:
      - application/json
      parameters:
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: ProblemBasic
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/define.ProblemBasic'
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 问题创建
      tags:
      - 管理员私有方法
  /admin/problem-modify:
    put:
      parameters:
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: ProblemBasic
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/define.ProblemBasic'
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 问题修改
      tags:
      - 管理员私有方法
  /category-list:
    get:
      parameters:
      - description: 当前页，默认第一页
        in: query
        name: page
        type: integer
      - description: size，默认20
        in: query
        name: size
        type: integer
      - description: keyword
        in: query
        name: keyword
        type: string
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 分类列表
      tags:
      - 公共方法
  /login:
    post:
      parameters:
      - description: username
        in: formData
        name: username
        type: string
      - description: password
        in: formData
        name: password
        type: string
      responses:
        "200":
          description: '{"code":"200","msg":"","data":""}'
          schema:
            type: string
      summary: 用户登录
      tags:
      - 公共方法
  /problem-detail:
    get:
      parameters:
      - description: problem identity
        in: query
        name: identity
        type: string
      responses:
        "200":
          description: '{"code":"200","msg":"","data":""}'
          schema:
            type: string
      summary: 问题详情
      tags:
      - 公共方法
  /problem-list:
    get:
      parameters:
      - description: 当前页，默认第一页
        in: query
        name: page
        type: integer
      - description: size，默认20
        in: query
        name: size
        type: integer
      - description: keyword
        in: query
        name: keyword
        type: string
      - description: category_identity
        in: query
        name: category_identity
        type: string
      responses:
        "200":
          description: '{"code":"200","msg":"","data":""}'
          schema:
            type: string
      summary: 问题列表
      tags:
      - 公共方法
  /rank-list:
    get:
      parameters:
      - description: page
        in: query
        name: page
        type: integer
      - description: size
        in: query
        name: size
        type: integer
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 用户排行榜
      tags:
      - 公共方法
  /register:
    post:
      parameters:
      - description: mail
        in: formData
        name: mail
        required: true
        type: string
      - description: code
        in: formData
        name: code
        required: true
        type: string
      - description: name
        in: formData
        name: name
        required: true
        type: string
      - description: password
        in: formData
        name: password
        required: true
        type: string
      - description: phone
        in: formData
        name: phone
        type: string
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 用户注册
      tags:
      - 公共方法
  /send-code:
    post:
      parameters:
      - description: email
        in: formData
        name: email
        required: true
        type: string
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 发送验证码
      tags:
      - 公共方法
  /submit-list:
    get:
      parameters:
      - description: 当前页，默认第一页
        in: query
        name: page
        type: integer
      - description: size，默认20
        in: query
        name: size
        type: integer
      - description: problem_identity
        in: query
        name: problem_identity
        type: string
      - description: user_identity
        in: query
        name: user_identity
        type: string
      - description: status
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code":"200","msg":"","data":""}'
          schema:
            type: string
      summary: 提交列表
      tags:
      - 公共方法
  /user-detail:
    get:
      parameters:
      - description: user identity
        in: query
        name: identity
        type: string
      responses:
        "200":
          description: '{"code":"200","msg":"","data":""}'
          schema:
            type: string
      summary: 用户详情
      tags:
      - 公共方法
  /user/submit:
    post:
      parameters:
      - description: authorization
        in: header
        name: authorization
        required: true
        type: string
      - description: problem_identity
        in: query
        name: problem_identity
        required: true
        type: string
      - description: code
        in: body
        name: code
        required: true
        schema:
          type: string
      responses:
        "200":
          description: '{"code":"200","data":""}'
          schema:
            type: string
      summary: 代码提交
      tags:
      - 用户私有方法
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
